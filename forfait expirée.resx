<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>